@{
    ViewData["Title"] = "Promise";
}

<p>A promising example.</p>
<div>
    <input id="PromiseExampleButton" type="button" class="button" value="Run Promise Example" /> <span id="ProgressArea"></span>
</div>
<div>
    <div id ="ResultArea"></div>
</div>

<script src="~/js/progress.js"></script>

<script>
    $(document).ready(() =>
    {
        $('#PromiseExampleButton').on('click', () => {
            DisableButton();
            $('#ResultArea').html('');
            var promise = $.getJSON('/Home/LongRunningTask');
            var requestTime = new Date().getTime();
            
            promise.done(data => {
                requestTime = new Date().getTime() - requestTime;
                if (data.success === true) {
                    $('#ResultArea').html(`The request took ${requestTime}ms. The promise was fulfilled! The data returned success. Calling second long running task...`);
                    requestTime = new Date().getTime();
                    var promise2 = $.getJSON('/Home/SecondLongRunningTask');

                    promise2.done(data2 => {
                        requestTime = new Date().getTime() - requestTime;
                        if (data2.success === true) {
                            $('#ResultArea').html($('#ResultArea').html() + `<br /><br />The second request took ${requestTime}ms. The promise was fulfilled! The data returned success.`);
                        }
                        else {
                            $('#ResultArea').html($('#ResultArea').html() + `<br /><br />The second request took ${requestTime}ms. The promise was fulfilled! The data returned failure.`);
                        }
                        EnableButton();
                    });

                    promise2.fail(() => {
                        requestTime = new Date().getTime() - requestTime;
                        $('#ResultArea').html($('#ResultArea').html() + `The second request took ${requestTime}ms. The promise was rejected! The call threw an exception.`);
                        EnableButton();
                    });
                }
                else {
                    $('#ResultArea').html(`The request took ${requestTime}ms. The promise was fulfilled! The data returned failure. The second long running task will not be called.`);
                    EnableButton();
                }
            });
            
            promise.fail(() => {
                requestTime = new Date().getTime() - requestTime;
                $('#ResultArea').html(`The request took ${requestTime}ms. The promise was rejected! The call threw an exception. The second long running task will not be called.`);
                EnableButton();
            });
         });
    });

    function DisableButton() {
        progress.showProgress('ProgressArea');
        $('#PromiseExampleButton').val('Awating results...');
        $('#PromiseExampleButton').addClass("disabled");
    }

    function EnableButton () {
        progress.stopProgress('ProgressArea');
        $('#PromiseExampleButton').val('Run Promise Example');
        $('#PromiseExampleButton').removeClass("disabled");
    }
</script>